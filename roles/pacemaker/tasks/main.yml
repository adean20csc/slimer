---
- name: install pacemaker packages
  yum: pkg={{ item }} state=present
  with_items:
    - pacemaker
    - resource-agents
    - fence-agents-all
    - pcs
  tags: pcs

- name: check for auth
  command: pcs cluster auth
  run_once: true
  ignore_errors: true
  register: cmd
  tags: pcs

- name: Generate crypt password
  local_action: command python -c "from passlib.hash import sha512_crypt; import getpass; print sha512_crypt.encrypt('{{ pcs_cluster_pass }}')"
  register: pass
  run_once: true
  when:  "'Already authorized' not in cmd.stdout"
  tags: pcs

- name: setup hacluster passwd
  user: name=hacluster comment='pacemaker user' password={{ pass.stdout }}
  when:  "'Already authorized' not in cmd.stdout"
  tags: pcs

- name: start pcsd
  service: name=pcsd enabled=yes state=started
  tags: pcs

- debug: msg="{{cluster_nodes}}"

- name: set pcs cluster auth
  command: pcs cluster auth -u hacluster -p {{ pcs_cluster_pass }} {{ cluster_nodes }} --force
  when: "'Already authorized' not in cmd.stdout"
  run_once: true
  tags: pcs

- name: check for cluster
  command: pcs status
  register: cmd
  run_once: true
  ignore_errors: true
  tags: pcs

- name: setup pacemaker cluster
  command: pcs cluster setup --name {{ pcs_cluster_name }} {{ cluster_nodes }} --enable --start --force
  run_once: true
  when: "'Cluster name' not in cmd.stdout"
  tags: pcs


- name: pause to let pacemaker initialize resources
  pause: seconds=30
  tags: pcs

- name: disable stonith
  command: pcs property set stonith-enabled=false
  run_once: true
  ignore_errors: true
  tags: pcs
  when: not use_stonith

- name: create stonith resources
  shell: "pcs stonith show ipmilan-fence-{{item}} || pcs stonith create ipmilan-fence-{{item}}  fence_{{hostvars[item]['fencing_agent']}} pcmk_host_list={{item}} {{ hostvars[item]['fencing_params'] }}"
  with_items: groups['controller']
  run_once: true
  tags: pcs
  when: use_stonith

- name: create location constraint
  shell: "pcs constraint list --full | grep ipmilan-fence-{{ item }} || pcs constraint location ipmilan-fence-{{item}} avoids {{item}}"
  with_items: groups['controller']
  run_once: true
  tags: pcs
  when: use_stonith

- name: crm verify
  command: crm_verify -L
  run_once: true
  tags: pcs
