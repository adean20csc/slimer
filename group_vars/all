---
### OpenStack control plane configuration

# select OpenStack release: havana, icehouse, juno
openstack_release: juno
use_ha_controller: true
use_swift: true
use_rabbit: true
use_ha_db: true
use_galera: true
use_ceph: false
se_cinder_nfs_volume_driver: false
use_netapp: false
use_netapp_copyoffload: false
# select Nova Network or Neutron
use_nova_network: false
# use nfs for nova ephemeral volumes
#use_nova_nfs_backend: true
# if use_nova_shared_backend is "true", set nova_shared_volume, nova_shared_fs_type and nova_shared_fs_mount_options
#use_nova_shared_backend: "{{ use_nova_nfs_backend }}"
use_neutron: true
# havana: select ovs or other Neutron standalone plugin
# icehouse: select ml2 and its plugins or a standalone Neutron plugin like Cisco Nexus
use_neutron_ml2: true
use_neutron_ovs: true
use_neutron_cisco: false
use_neutron_l3: true
use_lbaas: true
use_heat: true
use_ceilometer: true


### Network interface assignment
# any deviations for individual hosts should be specified in the host_vars or inventory files
primary_if: bond0.1805
private_if: bond0.1801
tunnel_if: bond0.1802

search_domain: ".lordbusiness"
nameservers:
 - 172.17.10.22
 - 192.168.70.3
 - 192.168.70.4


### NTP servers
ntp:
  - 0.rhel.pool.ntp.org
  - 1.rhel.pool.ntp.org
  - 2.rhel.pool.ntp.org

mongo_replSet:
 - wiley-ctlr-2
 - wiley-ctlr-3

### Pacemaker cluster
pcs_cluster_name: SOME_CLUSTER_NAME
pcs_cluster_pass: "{{ lookup('password', inventory_dir + '/credentials/pcs_cluster_pass chars=ascii_letters,digits') }}"
#pcs_cluster_pass_encoded: "{{ lookup('file', inventory_dir + '/credentials/pcs_cluster_pass_encoded') }}"
#pcs_cluster_pass: password
# short domain names of the controller nodes
controller_node_names:
  - wiley-ctlr-1
  - wiley-ctlr-2
  - wiley-ctlr-3

# The value of the fencing parameter below depends from the type of the fencing agent.
# Here are few examples for different agent types:
# fencing: { agent: ipmilan, params: "login=root passwd=calvin ipaddr=172.31.0.23 lanplus='' verbose=''" }
# fencing: { agent: cisco_ucs, params: "login=pacemaker passwd='SECRET' ipaddr=10.161.0.50 suborg=org-Controller port=Profile-CT-1-1 ssl=1 ssl_insecure=1" }
#

swift_nodes:
  - name: wiley-swift-1
    addr_int: 172.17.17.74
  - name: wiley-swift-2
    addr_int: 172.17.17.75
  - name: wiley-swift-3
    addr_int: 172.17.17.76

controller_nodes:
  - name: wiley-ctlr-1
    fqdn: wiley-ctlr-1.lordbusiness
    addr_pub: 172.17.21.70
    addr_int: 172.17.17.70
    fencing: { agent: ipmilan, params: "login=root passwd=calvin ipaddr=172.30.0.70 lanplus='' verbose=''" }

  - name: wiley-ctlr-2
    fqdn: wiley-ctlr-2.lordbusiness
    addr_pub: 172.17.21.71
    addr_int: 172.17.17.71
    fencing: { agent: ipmilan, params: "login=root passwd=calvin ipaddr=172.30.0.71 lanplus='' verbose=''" }

  - name: wiley-ctlr-3
    fqdn: wiley-ctlr-3.lordbusiness
    addr_pub: 172.17.21.72
    addr_int: 172.17.17.72
    fencing: { agent: ipmilan, params: "login=root passwd=calvin ipaddr=172.30.0.72 lanplus='' verbose=''" }


### Messaging
rabbit_host: 172.17.17.99
rabbit_hosts: 172.17.17.70:5672,172.17.17.71:5672,172.17.17.72:5672
rabbit_port: 5672
rabbit_node_names: "{{ controller_node_names }}"
rabbitmq_limit_nofile: 102400

### Database
lb_db_vip: 172.17.17.101

# Galera cluster parameters
wsrep_cluster_name: galera_cluster
wsrep_cluster_address: "gcomm://{{ controller_node_names | join(',') }}"
#clustercheck_db_pass: "{{ lookup('password', inventory_dir + '/credentials/clustercheck_db_pass chars=ascii_letters,digits') }}"
clustercheck_db_pass: password
# Passwords for database special users
db_root_password: "{{ lookup('password', inventory_dir + '/credentials/db_root_password chars=ascii_letters,digits') }}"
keystone_db_pass: "{{ lookup('password', inventory_dir + '/credentials/keystone_db_pass chars=ascii_letters,digits') }}"
glance_db_pass: "{{ lookup('password', inventory_dir + '/credentials/glance_db_pass chars=ascii_letters,digits') }}"
cinder_db_pass: "{{ lookup('password', inventory_dir + '/credentials/cinder_db_pass chars=ascii_letters,digits') }}"
nova_db_pass: "{{ lookup('password', inventory_dir + '/credentials/nova_db_pass chars=ascii_letters,digits') }}"
neutron_db_pass: "{{ lookup('password', inventory_dir + '/credentials/neutron_db_pass chars=ascii_letters,digits') }}"
heat_db_pass: "{{ lookup('password', inventory_dir + '/credentials/heat_db_pass chars=ascii_letters,digits') }}"
swift_db_pass: "{{ lookup('password', inventory_dir + '/credentials/swift_db_pass chars=ascii_letters,digits') }}"


### memcache servers
memcached_servers:
  - '172.17.17.70:11211'
  - '172.17.17.71:11211'
  - '172.17.17.72:11211'

### MongoDB servers (use domain names)
mongodb_servers: "{{ controller_node_names }}"

### Keystone
# scalability tuning parameters
#keystone_rpc_conn_pool_size: 30
#keystone_rpc_thread_pool_size: 64
#keystone_database_min_pool_size: 1

keystone_admin_token: "{{ lookup('password', inventory_dir + '/credentials/keystone_admin_token chars=hexdigits') }}"

# passwords for special OpenStack users
admin_pass: "{{ lookup('password', inventory_dir + '/credentials/admin_pass chars=ascii_letters,digits') }}"
glance_pass: "{{ lookup('password', inventory_dir + '/credentials/glance_pass chars=ascii_letters,digits') }}"
cinder_pass: "{{ lookup('password', inventory_dir + '/credentials/cinder_pass chars=ascii_letters,digits') }}"
swift_pass: "{{ lookup('password', inventory_dir + '/credentials/swift_pass chars=ascii_letters,digits') }}"
neutron_pass: "{{ lookup('password', inventory_dir + '/credentials/neutron_pass chars=ascii_letters,digits') }}"
nova_pass: "{{ lookup('password', inventory_dir + '/credentials/nova_pass chars=ascii_letters,digits') }}"
heat_pass: "{{ lookup('password', inventory_dir + '/credentials/heat_pass chars=ascii_letters,digits') }}"
ceilometer_pass: "{{ lookup('password', inventory_dir + '/credentials/ceilometer_pass chars=ascii_letters,digits') }}"


### Nova
# scalability tuning parameters
#nova_rpc_conn_pool_size: 30
#nova_rpc_thread_pool_size: 64
#nova_database_min_pool_size: 1
#nova_conductor_workers: 4
#nova_osapi_workers: 4

# hypervisor features
#nova_instance_live_migration: true
#nova_network_device_mtu: 9000

# nova network specific
#nova_vlan_start: 74
nova_vlan_interface: "{{ private_if }}"

# specific for neutron based network implementation
# disable security group
nova_security_group_api: neutron
#nova_firewall_driver: neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver
nova_firewall_driver: nova.virt.firewall.NoopFirewallDriver
#nova_ovs_bridge_mappings: "physnet1:br1"

# storage related
nova_libvirt_images_type: rbd
nova_secret_uuid: 522e17af-794c-4db9-95ae-884c48f24b13

# Define the following parameters to use Nova with ephemeral storage on a shared volume
# For example, to use a NFS share:
#nova_shared_volume: "nfs-server.example.com:/srv/nova"
#nova_shared_fs_type: nfs4
#nova_shared_fs_mount_options: "sec=sys,defaults"

# ceilometer related
nova_notify_on_state_change: vm_and_task_state


### Glance

glance_datadir: /var/lib/glance/images/
glance_api_port: 9292
glance_registry_port: 9191
# define the following parameters to use NetApp as a Glance backend
#default_store: file
#glance_show_image_direct_url: true
#glance_show_multiple_locations: true
#glance_filesystem_store_metadata_file: /etc/glance/filesystem_store_metadata.json
# this is necessary to support NetApp copy offload
#glance_filesystem_store_file_perm: '0644'

# ceph backend settings
#default_store: rbd
#glance_rbd_user: images
#glance_rbd_pool: images
#rbd_secret_uuid: 522e17af-794c-4db9-95ae-884c48f24b13

# for Havana only: use qpid or rabbit for communication with ceilometer
#glance_notifier_strategy: qpid
#glance_notifier_strategy: rabbit


### Cinder
# definition of multi-volume backends
cinder_enabled_backends:
#  - LVM_iSCSI
  - Generic_NFS
#  - RBD
#  - GlusterFS
#  - NetApp

nfs_path: "/srv"

# ceph backend settings
#cinder_rbd_user: volumes
#cinder_rbd_pool: volumes

# NetApp driver parameters
# the volume backend name must match the name given in cinder_enabled_backends
netapp_volume_backend_name: NetApp
netapp_login: LOGIN
netapp_password: SECRET
netapp_vserver: VSERVER_NAME
netapp_server_hostname: '10.161.0.220'
netapp_storage_protocol: iscsi
netapp_transport_type: https
#netapp_thick_provisioned: false
#cinder_nfs_mount_options: 'sec=sys,defaults'

### HAproxy parameters
# pacemaker IPaddr2 resources for HAproxy
vip_addresses:
  - name: vip-db
    addr: 172.17.17.101

  - name: vip-msg
    addr: 172.17.17.99

  - name: vip-keystone-int
    addr: 172.17.17.103

  - name: vip-glance-int
    addr: 172.17.17.104

  - name: vip-cinder-int
    addr: 172.17.17.105

  - name: vip-nova-int
    addr: 172.17.17.106

  - name: vip-neutron-int
    addr: 172.17.17.107

  - name: vip-horizon-int
    addr: 172.17.17.108

  - name: vip-heat-int
    addr: 172.17.17.109

  - name: vip-ceilometer-int
    addr: 172.17.17.110

  - name: vip-swift-int
    addr: 172.17.17.111

#  - name: vip-keystone-pub
#    addr: 172.17.20.103

#  - name: vip-glance-pub
#    addr: 172.17.20.104

#  - name: vip-cinder-pub
#    addr: 172.17.20.105

#  - name: vip-nova-pub
#    addr: 172.17.20.106

#  - name: vip-neutron-pub
#    addr: 172.17.20.107

#  - name: vip-horizon-pub
#    addr: 172.17.20.108

#  - name: vip-heat-pub
#    addr: 172.17.20.109

#  - name: vip-ceilometer-pub
#    addr: 172.17.20.110


keystone_vip: 172.17.17.103
glance_vip: 172.17.17.104
cinder_vip: 172.17.17.105
nova_vip: 172.17.17.106
neutron_vip: 172.17.17.107
horizon_vip: 172.17.17.108
heat_vip: 172.17.17.109
ceilometer_vip: 172.17.17.110
swift_vip: 172.17.17.111

swift_public_vip: "{{ swift_vip }}"
swift_admin_vip: "{{ swift_vip }}"
swift_private_vip: "{{ swift_vip }}"

keystone_public_vip: "{{keystone_vip}}"
keystone_admin_vip: "{{ keystone_vip }}"
keystone_private_vip: "{{ keystone_vip }}"

glance_public_vip: "{{glance_vip}}"
glance_admin_vip: "{{ glance_vip }}"
glance_private_vip: "{{ glance_vip }}"

cinder_public_vip: "{{ cinder_vip }}"
cinder_admin_vip: "{{ cinder_vip }}"
cinder_private_vip: "{{ cinder_vip }}"

nova_public_vip: "{{nova_vip}}"
nova_admin_vip: "{{ nova_vip }}"
nova_private_vip: "{{ nova_vip }}"

neutron_public_vip: "{{ neutron_vip}}"
neutron_admin_vip: "{{ neutron_vip }}"
neutron_private_vip: "{{ neutron_vip }}"

horizon_public_vip: "{{ horizon_vip }}"
horizon_private_vip: "{{ horizon_vip }}"

heat_public_vip: "{{ heat_vip }}"
heat_admin_vip: "{{ heat_vip }}"
heat_private_vip: "{{ heat_vip }}"

ceilometer_public_vip: "{{ ceilometer_vip}}"
ceilometer_admin_vip: "{{ ceilometer_vip }}"
ceilometer_private_vip: "{{ ceilometer_vip }}"


### Neutron parameters
neutron_core_plugin: neutron.plugins.ml2.plugin.Ml2Plugin
neutron_service_plugins:
  - neutron.services.l3_router.l3_router_plugin.L3RouterPlugin
  - neutron.services.firewall.fwaas_plugin.FirewallPlugin
  - neutron.services.loadbalancer.plugin.LoadBalancerPlugin
  - neutron.services.metering.metering_plugin.MeteringPlugin

# scalability tuning parameters
#neutron_thread_pool_size: 64
#neutron_rpc_conn_pool_size: 30
#neutron_database_min_pool_size: 1
#neutron_database_max_pool_size: 10
#neutron_api_workers: 0
#neutron_rpc_workers: 0
neutron_metadata_workers: 20
neutron_metadata_backlog: 2048

neutron_metadata_proxy_shared_secret: "{{ lookup('password', inventory_dir + '/credentials/neutron_metadata_proxy_shared_secret chars=hexdigits') }}"
neutron_dhcp_enable_isolated_metadata: true
neutron_ml2_type_drivers: vxlan,flat
neutron_ml2_tenant_network_types: vxlan
#neutron_network_vlan_ranges: "pnet1:100:200"
neutron_network_vlan_ranges: "net-ex"
neutron_vxlan_vni_ranges: 10:10000
neutron_vxlan_group: 239.1.1.1
neutron_ovs_tenant_network_type: vxlan
neutron_ovs_tunnel_type: vxlan
neutron_ovs_tunnel_id_ranges: 10:10000
neutron_ovs_bridge_mappings: "bond0.1805:br-ex"
#neutron_ovs_bridges:
neutron_ovs_integration_bridge: br-int
neutron_ovs_tunnel_bridge: br-tun
neutron_ovs_bridges:
  - bridge: br-ex
    port: bond0.1805
#neutron_ovs_veth_mtu: 9000
# if neutron_external_network_bridge is not set, Neutron will use br-ex by default
# it is recommended to use empty string with the ml2 plugin
neutron_external_network_bridge: "br-ex"

# disable security groups
neutron_ovs_firewall_driver: "neutron.agent.firewall.NoopFirewallDriver"
neutron_agent_tunnel_types: vxlan

# Cisco Nexus standalone plugin for Neutron
cisco_provider_vlan_auto_create: true
cisco_provider_vlan_auto_trunk: true
cisco_nexus_l3_enable: true
cisco_nexus_switches:
  - ipaddr: 10.161.0.21
    username: admin
    password: SECRET
    ssh_port: 22
    hosts:
      - name: compute-01.example.com
        port: "port-channel:2"

      - name: compute-02.example.com
        port: "port-channel:2"

      - name: compute-03.example.com
        port: "port-channel:2"

      - name: compute-04.example.com
        port: "port-channel:2"

      - name: compute-05.example.com
        port: "port-channel:2"

      - name: compute-06.example.com
        port: "port-channel:2"

      - name: controller-01.example.com
        port: "port-channel:2"

      - name: controller-02.example.com
        port: "port-channel:2"

      - name: controller-03.example.com
        port: "port-channel:2"

  - ipaddr: 10.161.0.22
    username: admin
    password: SECRET
    ssh_port: 22
    hosts:
      - name: compute-01.example.com
        port: "port-channel:2"

      - name: compute-02.example.com
        port: "port-channel:2"

      - name: compute-03.example.com
        port: "port-channel:2"

      - name: compute-04.example.com
        port: "port-channel:2"

      - name: compute-05.example.com
        port: "port-channel:2"

      - name: compute-06.example.com
        port: "port-channel:2"

      - name: controller-01.example.com
        port: "port-channel:2"

      - name: controller-02.example.com
        port: "port-channel:2"

      - name: controller-03.example.com
        port: "port-channel:2"

### Horizon
horizon_internal_servername: vip-horizon-int.business
horizon_public_servername: vip-horizon-pub.business
# A url to make first request and get .secret_key_store generated
dashboard_first_request_url: "http://vip-horizon-pub.business/dashboard"

### Ceilometer
ceilometer_metering_secret: "{{ lookup('password', inventory_dir + '/credentials/ceilometer_metering_secret chars=hexdigits') }}"

# keep last 5 days data only (value is in secs)
ceilometer_time_to_live: 432000


#### swift
# part_power = 2 ^ partition power = partition count. ( The partition is rounded up after calculation.)
part_power: 16
#replica couunt =  The number of times that your data will be replicated in the cluster.
replica_count: 3
# min_part_hours =  Minimum number of hours before a partition can be moved. This parameter increases availability of data by not moving more than one copy of a given data item within that min_part_hours amount of time.
min_part_hours: 24
swift_pathprefix: "{{ lookup('password', inventory_dir + '/credentials/swift_prefix chars=ascii_letters,digits') }}"
swift_pathsuffix: "{{ lookup('password', inventory_dir + '/credentials/swift_suffix chars=ascii_letters,digits') }}"
