---
- name: install nova compute packages
  yum: pkg={{ item }} state=present
  with_items:
    - openstack-nova-compute
    - openstack-utils
    - python-cinder
    - openstack-ceilometer-compute
    - nfs-utils
    - libvirt
  tags: nova

- name: install ceph package
  yum: name=ceph-common state=present
  when: use_ceph
  tags: nova

- name: enable nfs support services
  service: name={{ item }} enabled=yes state=started
  with_items:
    - rpcbind
    - nfslock
  when: use_cinder_nfs_volume_driver or use_nova_nfs_backend
  tags: nova

- name: enable nfs-idmap
  service: name=nfs-idmap enabled=yes state=started
  when: ( use_cinder_nfs_volume_driver or use_nova_nfs_backend ) and ansible_distribution_major_version|int == 7
  tags: nova

- name: configure shared storage for nova instances
  lineinfile: >
    dest=/etc/fstab state=present
    regexp="/var/lib/nova/instances"
    line="{{ nova_shared_volume }} /var/lib/nova/instances {{ nova_shared_fs_type }} {{ nova_shared_fs_mount_options }} 0 0"
  when: use_nova_shared_backend
  tags: nova

- name: modify libvirtd parameters
  template: src={{ openstack_release }}/sysconfig-libvirtd.j2
            dest=/etc/sysconfig/libvirtd
            mode=0644 owner=root group=root
  when: nova_instance_live_migration and openstack_release == 'icehouse'
  notify: restart libvirtd
  tags: nova

- name: set libvirtd.conf
  template: src={{ openstack_release }}/libvirtd.conf.j2
            dest=/etc/libvirt/libvirtd.conf
            mode=0644 owner=root group=root
  when: nova_instance_live_migration and openstack_release == 'icehouse'
  notify: restart libvirtd
  tags: nova

- name: modify libvirtd parameters with openstack-config
  command: openstack-config --verbose --set /etc/sysconfig/libvirtd '' LIBVIRTD_ARGS '"--listen"'
  register: cmd
  changed_when: "'unchanged' not in cmd.stderr"
  when: nova_instance_live_migration and openstack_release == 'juno'
#  notify: restart libvirtd
  tags: nova

- name: modify libvirtd.conf parameters with openstack-config
  command: openstack-config --verbose --set /etc/libvirt/libvirtd.conf {{ item }}
  with_items:
    - "DEFAULT verbose true"
    - "'' listen_tls 0"
    - "'' listen_tcp 1"
    - "'' auth_tcp none"
  register: cmd
  changed_when: "'unchanged' not in cmd.stderr"
  when: nova_instance_live_migration and openstack_release == 'juno'
#  notify: restart libvirtd
  tags: nova

- name: restart and enable libvirtd
  service: name=libvirtd state=restarted enabled=yes
  tags: nova

#- name: enable libvirtd service
#  service: name=libvirtd enabled=yes state=started
#  tags: nova

- name: install nova-network
  yum: pkg=openstack-nova-network state=present
  when: use_nova_network
  tags: nova

- name: install neutron network node
  yum: pkg={{ item }} state=present
  with_items:
    - openvswitch
    - openstack-neutron-openvswitch
  when: use_neutron
  tags: nova

- name: start openvswitch
  service: name=openvswitch enabled=yes state=started
  when: use_neutron
  tags: nova

- name: create integration bridge
  openvswitch_bridge: bridge=br-int state=present
  when: use_neutron
  tags: nova

- name: create tunneling bridge
  openvswitch_bridge: bridge=br-tun state=present
  when: neutron_ovs_tunnel_type is defined
  tags: nova

- name: create ovs bridges
  openvswitch_bridge: bridge={{ item.bridge }} state=present
  with_items: neutron_ovs_bridges
  when: neutron_ovs_bridges is defined
  tags: nova

- name: configure ovs ports
  openvswitch_port: bridge={{ item.bridge }} port={{ item.port }} state=present
  with_items: neutron_ovs_bridges
  when: neutron_ovs_bridges is defined
  tags: nova

- name: deploy neutron config file
  template: src={{ openstack_release }}/neutron.conf.j2
            dest=/etc/neutron/neutron.conf
            mode=0640 owner=root group=neutron
  notify: restart neutron openvswitch agent
  when: use_neutron and (openstack_release == 'icehouse' or openstack_release == 'havana')
  tags: nova

- name: Update neutron.conf file for Juno
  command: openstack-config --verbose --set /etc/neutron/neutron.conf {{ item }}
  with_items:
    - "DEFAULT verbose true"
    - "DEFAULT auth_strategy keystone"
    - "keystone_authtoken auth_host {{ keystone_admin_vip | default('127.0.0.1') }}"
    - "keystone_authtoken auth_port {{ keystone_auth_port | default(35357) }}"
    - "keystone_authtoken auth_protocol {{ keystone_auth_protocol | default('http') }}"
    - "keystone_authtoken admin_tenant_name services"
    - "keystone_authtoken admin_user neutron"
    - "keystone_authtoken admin_password {{ neutron_pass }}"
    - "DEFAULT rabbit_hosts {{ rabbit_hosts }}"
    - "DEFAULT rabbit_ha_queues true"
    - "DEFAULT notification_driver neutron.openstack.common.notifier.rpc_notifier"
  register: cmd
  changed_when: "'unchanged' not in cmd.stderr"
  when: openstack_release == 'juno'
  tags: nova

- name: Update ovs_neutron_plugin.ini file for Juno
  command: openstack-config --verbose --set /etc/neutron//plugins/openvswitch/ovs_neutron_plugin.ini {{ item }}
  with_items:
    - "DEFAULT verbose true"
    - "agent tunnel_types {{ neutron_ovs_tunnel_type }}"
    - "agent veth_mtu 9000"
    - "agent vxlan_udp_port {{ neutron_vxlan_udp_port }}"
    - "ovs enable_tunneling True"
    - "ovs tunnel_id_ranges {{ neutron_ovs_tunnel_id_ranges }}"
    - "ovs tenant_network_type {{ neutron_ovs_tenant_network_type }}"
    - "ovs integration_bridge {{ neutron_ovs_integration_bridge }}"
    - "ovs tunnel_bridge {{ neutron_ovs_tunnel_bridge }}"
    - "ovs local_ip {{ tunnel_ipaddr }}"
    - "securitygroup firewall_driver {{ neutron_ovs_firewall_driver }}"
    - "agent l2_population False"
  register: cmd
  changed_when: "'unchanged' not in cmd.stderr"
  when: openstack_release == 'juno'
  tags: nova

- name: Update nova.conf file for Juno
  command: openstack-config --verbose --set /etc/nova/nova.conf {{ item }}
  with_items:
    - "DEFAULT vif_plugging_is_fatal False"
    - "DEFAULT vif_plugging_timeout 0"
    - "DEFAULT verbose true"
    - "DEFAULT vncserver_proxyclient_address {{ internal_ipaddr }}"
    - "DEFAULT vncserver_listen 0.0.0.0"
    - "DEFAULT novncproxy_base_url http://{{ nova_public_vip }}:6080/vnc_auto.html"
    - "database connection mysql://nova:{{ nova_db_pass }}@{{ lb_db_vip }}/nova"
    - "database max_retries -1"
    - "DEFAULT auth_strategy keystone"
    - "DEFAULT memcache_servers {{ memcached_servers|join(',') }}"
    - "DEFAULT rabbit_hosts {{ rabbit_hosts }}"
    - "DEFAULT rabbit_ha_queues true"
    - "DEFAULT metadata_host {{ nova_private_vip }}"
    - "DEFAULT metadata_listen {{ internal_ipaddr }}"
    - "DEFAULT metadata_listen_port {{ nova_metadata_port }}"
    - "neutron service_neutron_metadata_proxy True"
    - "neutron neutron_metadata_proxy_shared_secret {{ neutron_metadata_proxy_shared_secret }}"
    - "DEFAULT glance_host {{ glance_private_vip }}"
    - "DEFAULT glance_port {{ glance_port | default(9292) }}"
    - "DEFAULT network_api_class nova.network.neutronv2.api.API"
    - "DEFAULT neutron_url http://{{ neutron_private_vip | default('127.0.0.1') }}:{{ neutron_port | default(9696) }}/"
    - "DEFAULT neutron_admin_tenant_name services"
    - "DEFAULT neutron_admin_username neutron"
    - "DEFAULT neutron_admin_password {{ neutron_pass }}"
    - "DEFAULT neutron_admin_auth_url http://{{ keystone_private_vip | default('127.0.0.1') }}:{{ keystone_private_port | default(5000) }}/v2.0"
    - "DEFAULT ovs_bridge br-int"
    - "DEFAULT firewall_driver nova.virt.firewall.NoopFirewallDriver"
    - "DEFAULT libvirt_vif_driver nova.virt.libvirt.vif.LibvirtGenericVIFDriver"
    - "DEFAULT security_group_api {{ nova_security_group_api }}"
    - "conductor use_local false"
    - "DEFAULT scheduler_host_subset_size 30"
    - "DEFAULT instance_usage_audit True"
    - "DEFAULT instance_usage_audit_period hour"
    - "DEFAULT notify_on_state_change vm_and_task_state"
    - "DEFAULT notification_topics notifications"
    - "DEFAULT notification_driver ceilometer.compute.nova_notifier"
    - "DEFUALT notification_driver nova.openstack.common.notifier.rpc_notifier"
    - "DEFAULT rpc_backend nova.openstack.common.rpc.impl_kombu"
    - "DEFAULT instance_usage_audit True"
    - "DEFAULT notify_on_state_change vm_and_task_state"
    - "DEFAULT notification_driver nova.openstack.common.notifier.rpc_notifier"
  register: cmd
  when: openstack_release == 'juno'
  changed_when: "'unchanged' not in cmd.stderr"
  tags: nova

- name: Update ceilometer.conf file for Juno
  command: openstack-config --verbose --set /etc/ceilometer/ceilometer.conf {{ item }}
  with_items:
    - "DEFAULT verbose true"
    - "keystone_authtoken auth_host {{ keystone_admin_vip | default('127.0.0.1') }}"
    - "keystone_authtoken auth_port {{ keystone_auth_port | default(35357) }}"
    - "keystone_authtoken auth_protocol {{ keystone_auth_protocol | default('http') }}"
    - "keystone_authtoken admin_tenant_name services"
    - "keystone_authtoken admin_user ceilometer"
    - "keystone_authtoken admin_password {{ ceilometer_pass }}"
    - "DEFAULT rabbit_hosts {{ rabbit_hosts }}"
    - "DEFAULT rabbit_ha_queues true"
    - "publisher_rpc metering_secret {{ ceilometer_metering_secret }}"
    - "service_credentials os_auth_url http://{{ keystone_admin_vip }}:{{ keystone_private_port }}/v2.0"
    - "service_credentials os_username ceilometer"
    - "service_credentials os_password {{ ceilometer_pass }}"
    - "service_credentials os_tenant_name services"
    - "database connection mongodb://{{ controller_node_names | join(',') }}:{{ mongodb_port }}/ceilometer?replicaSet=ceilometer"
    - "database connection max_retries -1"
    - "database time_to_live {{ ceilometer_time_to_live | default(-1) }}"
    - "DEFAULT memcache_servers {{ memcached_servers|join(',') }}"
  register: cmd
  changed_when: "'unchanged' not in cmd.stderr"
  when: openstack_release == 'juno'
  tags: nova

- name: create a directory for cisco plugins
  file: dest=/etc/neutron/plugins/cisco mode=0755 owner=root group=root state=directory
  when: use_neutron_cisco
  tags: nova

- name: deploy neutron config file
  template: src={{ openstack_release }}/cisco_plugins.ini.j2
            dest=/etc/neutron/plugins/cisco/cisco_plugins.ini
            mode=0640 owner=root group=neutron
#  notify: restart neutron openvswitch agent
  when: use_neutron_cisco
  tags: nova

- name: deploy neutron openswitch config file
  template: src={{ openstack_release }}/ovs_neutron_plugin.ini.j2
            dest=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini
            mode=0640 owner=root group=neutron
  notify: restart neutron openvswitch agent
  when: use_neutron_ovs and (openstack_release == 'icehouse' or openstack_release == 'havana')
  tags: nova

- name: restart neutron openvswitch agent
  service: name=neutron-openvswitch-agent state=restarted
  tags: nova

- name: create a directory for the cisco nexus ssh keys
  file: dest=/var/lib/neutron/.ssh mode=0700 owner=neutron group=neutron state=directory
  when: use_neutron_cisco
  tags: nova

- name: make cisco nexus switch ssh keys known
  copy: src=special/cisco_nexus.keys
        dest=/var/lib/neutron/.ssh/known_hosts
        mode=0644 owner=neutron group=neutron
  when: use_neutron_cisco
  tags: nova

- name: copy cinder ceph client keyring to nova-compute nodes
  copy: src=files/cinder/ceph.client.keyring
        dest=/etc/ceph/ceph.client.{{ cinder_rbd_user | default('cinder') }}.keyring
        mode=0600 owner=root group=root
  when: use_ceph
  tags: nova

- name: deploy nova secret.xml file to enable access to the ceph storage
  template: src={{ openstack_release }}/nova-secret.xml.j2 dest=/tmp/secret.xml
  when: use_ceph
  tags: nova

- name: set libvirt secret value
  shell: virsh secret-set-value --secret $(virsh secret-define --file /tmp/secret.xml | awk '{print $2}') --base64 $(awk '/key/ {print $3}' /etc/ceph/ceph.client.{{ cinder_rbd_user | default('cinder') }}.keyring)
  when: use_ceph
  tags: nova

- name: start neutron networking
  service: name={{ item }} enabled=yes state=started
  with_items:
    - neutron-ovs-cleanup
    - neutron-openvswitch-agent
  when: use_neutron
  tags: nova

- name: start nova-compute services
  service: name=openstack-nova-compute enabled=yes state=started
  tags: nova

- name: start nova network
  service: name=openstack-nova-network enabled=yes state=started
  when: use_nova_network
  tags: nova
