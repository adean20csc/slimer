---
- name: install glance packages
  yum: pkg={{ item }} state=present
  with_items:
    - nfs-utils
    - openstack-glance
    - openstack-utils
    - openstack-selinux
    - python-openstackclient
  tags: glance

- name: Update glance-api config file
  command: openstack-config --verbose --set /etc/glance/glance-api.conf {{ item }}
  with_items:
    - "DEFAULT verbose true"
    - "database connection mysql://glance:{{ glance_db_pass }}@{{ lb_db_vip }}/glance"
    - "database max_retries -1"
    - "paste_deploy flavor keystone"
    - "keystone_authtoken identity_uri http://{{ keystone_vip }}:{{ keystone_auth_port }}"
    - "keystone_authtoken admin_tenant_name services"
    - "keystone_authtoken admin_user glance"
    - "keystone_authtoken admin_password {{ glance_pass }}"
    - "DEFAULT rabbit_hosts {{ rabbit_hosts }}"
    - "DEFAULT rabbit_ha_queues true"
    - "DEFAULT notification_driver messaging"
    - "DEFAULT registry_host {{ glance_vip }}"
    - "DEFAULT bind_host {{ glance_bind_host }}"
  #  - "DEFAULT bind_port {{ glance_api_port }}"
  register: cmd
  changed_when: "'unchanged' not in cmd.stderr"
  tags: glance

- name: Update glance-registry config file
  command: openstack-config --verbose --set /etc/glance/glance-registry.conf {{ item }}
  with_items:
    - "DEFAULT verbose true"
    - "database connection mysql://glance:{{ glance_db_pass }}@{{ lb_db_vip }}/glance"
    - "database max_retries -1"
    - "paste_deploy flavor keystone"
    - "keystone_authtoken identity_uri http://{{ keystone_vip }}:{{ keystone_auth_port }}"
    - "keystone_authtoken admin_tenant_name services"
    - "keystone_authtoken admin_user glance"
    - "keystone_authtoken admin_password {{ glance_pass }}"
    - "DEFAULT rabbit_hosts {{ rabbit_hosts }}"
    - "DEFAULT rabbit_ha_queues true"
    - "DEFAULT notification_driver messaging"
    - "DEFAULT registry_host {{ glance_vip }}"
    - "DEFAULT bind_host {{ glance_bind_host }}"
  #  - "DEFAULT bind_port {{ glance_registry_port }}"
  register: cmd
  changed_when: "'unchanged' not in cmd.stderr"
  tags: glance

- name: restart and disable glance
  service: name={{ item }} state=restarted enabled=no
  with_items:
    - openstack-glance-api
    - openstack-glance-registry

- name: create the NFS share mountpoint on the nfs server
  file:
    path: "{{ glance_datadir }}"
    owner: glance
    group: nobody
    state: directory
  tags: glance

- name: enable nfs support services
  service: name={{ item }} enabled=yes state=started
  with_items:
    - rpcbind
    - nfs-server
    - nfs-lock
    - nfs-idmapd
  when: default_store == 'file'
  tags: glance

#- name: pause for nfs
#  pause: seconds=15
#  when: ansible_distribution_major_version|int == 7
#  tags: glance

#- name: enable nfs-idmapd
#  service: name=nfs-idmapd enabled=yes state=started
#  when: ansible_distribution_major_version|int == 7
#  tags: glance

- name: install rabbitmq driver
  yum: pkg=python-kombu state=present
  when: use_rabbit
  tags: glance

- name: check for tables
  command: mysql -e "select count(*) from information_schema.tables where table_schema='glance'" -sN
  run_once: true
  register: mysql_result
  tags: glance

- name: run db_sync for glance
  shell: runuser glance -s /bin/sh -c '/usr/bin/glance-manage db_sync'
  when: mysql_result.stdout|int == 0
  run_once: true
  tags: glance

#- name: open firewall ports
#  firewalld: port=9191-9192/tcp permanent=true immediate=true state=enabled
#  tags: glance

- name: use pacemaker to mount the NFS share as service.
  pcs_resource: command=create name=glance-fs type=Filesystem clone=yes
  args:
     options:
        device: "{{ inventory_hostname }}:{{ glance_datadir }}"
        directory: "{{ glance_datadir }}"
        fstype: "nfs"
        options: "v3"
     operations:
      - action: monitor
        options:
          start-delay: 10s
  run_once: true
  when: default_store == 'file'
  tags: glance

- name: create pacemaker resources for glance services
  pcs_resource: command=create name=glance-{{ item }} type=systemd:openstack-glance-{{ item }} clone=yes
  args:
    operations:
      - action: monitor
        options:
          start-delay: 10s
  run_once: true
  with_items:
    - registry
    - api
  tags: glance

- name: create pacemaker constraints for glance-fs
  shell: pcs constraint list --full | grep id:{{ item.id }} || pcs constraint {{ item.cmd }}
  with_items:
    - { id: order-glance-fs-clone-glance-registry-clone-mandatory, cmd: "order start glance-fs-clone then glance-registry-clone" }
    - { id: colocation-glance-registry-clone-glance-fs-clone-mandatory, cmd: "colocation add glance-registry-clone with glance-fs-clone" }
  when: default_store == 'file'
  tags: glance

- name: create pacemaker constraints for glance
  shell: pcs constraint list --full | grep id:{{ item.id }} || pcs constraint {{ item.cmd }}
  with_items:
    - { id: order-keystone-clone-glance-registry-clone-mandatory, cmd: "order start keystone-clone then glance-registry-clone" }
    - { id: order-glance-registry-clone-glance-api-clone-mandatory, cmd: "order start glance-registry-clone then glance-api-clone" }
    - { id: colocation-glance-api-clone-glance-registry-clone-mandatory, cmd: "colocation add glance-api-clone with glance-registry-clone" }
  run_once: true
  tags: glance
