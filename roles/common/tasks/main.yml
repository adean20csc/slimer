---
- name: ifdown network after bond creation
  shell: ifdown bond0 && ifup bond0
  tags: network

#- name: ifup network after bond creation
#  command: ifup bond0
#  tags: network

- include: "RedHat-rpms.yml"
  when: ansible_os_family == "RedHat"
  tags: common

- name: enable ssh key-based access
  authorized_key: user=root key="{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
  notify: restore selinux context of .ssh files
  tags: sshkey

- name: set selinux policy and mode
  selinux: policy=targeted state=permissive
  tags: selinux

- name: install ntp
  yum: pkg=ntp state=installed
  tags: ntp

- name: configure ntp service
  template: src=ntp.conf.j2 dest=/etc/ntp.conf force=yes
  notify:
    - restart ntpd
  tags: ntp

- name: stop ntpd service to prepare for time synchronization
  service: name=ntpd state=stopped
  when: force_ntpdate == "yes"
  tags: ntp

- name: sync time from ntp servers
  command: ntpdate {{ ntp | join(" ") }}
  when: force_ntpdate == "yes"
  tags: ntp

- name: start ntpd service
  service: name=ntpd enabled=yes state=started
  tags: ntp

- name: deploy resolv.conf
  template: src=resolv.conf.j2 dest=/etc/resolv.conf
  tags: dns

- name: debug
  tags: dns
  debug: var=hostvars[inventory_hostname].int_if

- name: create /etc/hosts with all nodes
  tags: dns
  lineinfile: dest=/etc/hosts regexp='.*{{ item }}$' line="{{ hostvars[item].int_if.ipaddr }} {{item}}" state=present
  when: hostvars[item].int_if.ipaddr is defined
  with_items: groups['all']

#- name: create /etc/hosts with all nodes
#  template: src=hosts.j2 dest=/etc/hosts
#  tags: dns

- name: set hostname in /etc/hostname
  template: src=hostname.j2 dest=/etc/hostname
  when: ansible_distribution_major_version|int == 7
  notify: reset hostname using the hostnamectl utility
  tags: dns

- name: set hostname in /etc/sysconfig/network
  template: src=sysconfig-network.j2 dest=/etc/sysconfig/network
  when: ansible_distribution_major_version|int == 6
  notify: reset hostname using the hostname utility
  tags: dns
