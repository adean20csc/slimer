---
- name: iptable rules for ceilometer-controller
  iptables:
    port: 8777
    protocl: tcp
    rule: ACCEPT
    comment: "Ceilometer incoming"
  tags: iptables, ceilometer


- name: install ceilometer packages
  yum: pkg={{ item }} state=present
  with_items:
    - openstack-ceilometer-api
    - openstack-ceilometer-central
    - openstack-ceilometer-collector
    - openstack-ceilometer-alarm
  tags: ceilometer

- name: disable ceilometer services
  service: name={{ item }} enabled=no
  with_items:
    - openstack-ceilometer-central
    - openstack-ceilometer-collector
    - openstack-ceilometer-api
    - openstack-ceilometer-alarm-evaluator
    - openstack-ceilometer-alarm-notifier
  tags: ceilometer

- name: disable ceilometer notification service
  service: name=openstack-ceilometer-notification enabled=no
  tags: ceilometer

- name: create pacemaker resource for ceilometer-central
  pcs_resource: command=create name=ceilometer-central type=systemd:openstack-ceilometer-central
  args:
    operations:
      - action: monitor
        options:
          start-delay: 10s
  run_once: true
  tags: ceilometer

- name: create pacemaker resources for ceilometer control services
  pcs_resource: command=create name=ceilometer-{{ item }} type=systemd:openstack-ceilometer-{{ item }} clone=yes interleave=yes
  args:
    operations:
      - action: monitor
        options:
          start-delay: 10s
  run_once: true
  with_items:
    - collector
    - api
    - alarm-evaluator
    - alarm-notifier
    - notification
  tags: ceilometer

- name: create ceilometer-delay resource
  pcs_resource: command=create name=ceilometer-delay type=Delay clone=yes interleave=yes
  args:
    options:
      startdelay: 10
  run_once: true
  tags: ceilometer

- name: create pacemaker constraints for ceilometer
  shell: "pcs constraint list --full | grep id:{{ item.id }} || pcs constraint {{ item.cmd }}"
  with_items:
    - { id: order-ceilometer-central-ceilometer-collector-clone-mandatory, cmd: "order start ceilometer-central then ceilometer-collector-clone" }
    - { id: order-ceilometer-collector-clone-ceilometer-api-clone-mandatory, cmd: "order start ceilometer-collector-clone then ceilometer-api-clone" }
    - { id: colocation-ceilometer-api-clone-ceilometer-collector-clone, cmd: "colocation add ceilometer-api-clone with ceilometer-collector-clone" }
    - { id: order-ceilometer-api-clone-ceilometer-delay-clone-mandatory, cmd: "order start ceilometer-api-clone then ceilometer-delay-clone" }
    - { id: colocation-ceilometer-delay-clone-ceilometer-api-clone, cmd: "colocation add ceilometer-delay-clone with ceilometer-api-clone" }
    - { id: order-ceilometer-delay-clone-ceilometer-alarm-evaluator-clone-mandatory, cmd: "order start ceilometer-delay-clone then ceilometer-alarm-evaluator-clone" }
    - { id: colocation-ceilometer-alarm-evaluator-clone-ceilometer-delay-clone, cmd: "colocation add ceilometer-alarm-evaluator-clone with ceilometer-delay-clone" }
    - { id: order-ceilometer-alarm-evaluator-clone-ceilometer-alarm-notifier-clone-mandatory, cmd: "order start ceilometer-alarm-evaluator-clone then ceilometer-alarm-notifier-clone" }
    - { id: colocation-ceilometer-alarm-notifier-clone-ceilometer-alarm-evaluator-clone, cmd: "colocation add ceilometer-alarm-notifier-clone with ceilometer-alarm-evaluator-clone" }
    - { id: order-ceilometer-alarm-notifier-clone-ceilometer-notification-clone-mandatory, cmd: "order start ceilometer-alarm-notifier-clone then ceilometer-notification-clone" }
    - { id: colocation-ceilometer-notification-clone-ceilometer-alarm-notifier-clone, cmd: "colocation add ceilometer-notification-clone with ceilometer-alarm-notifier-clone" }
    - { id: order-mongodb-clone-ceilometer-central-mandatory, cmd: "order start mongodb-clone then ceilometer-central" }
    - { id: order-keystone-clone-ceilometer-central-mandatory, cmd: "order start keystone-clone then ceilometer-central" }
  run_once: true
  register: cmd
  changed_when: "'{{ item.id }}' not in cmd.stdout"
  tags: ceilometer

