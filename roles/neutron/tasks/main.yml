---

- name: install neutron packages
  yum: pkg={{ item }} state=present
  with_items:
    - openstack-neutron
    - openstack-utils
    - openstack-selinux
    - openvswitch
  when: use_neutron
  tags: neutron

- name: install ml2 plugin
  yum: pkg=openstack-neutron-ml2 state=present
  when: use_neutron_ml2
  tags: neutron

- name: install openvswitch plugin
  yum: pkg=openstack-neutron-openvswitch state=present
  when: use_neutron_ovs
  tags: neutron

- name: install cisco plugin
  yum: pkg=openstack-neutron-cisco state=present
  when: use_neutron_cisco
  tags: neutron

- name: start openvswitch
  service: name=openvswitch enabled=yes state=started
  when: use_neutron
  tags: neutron

- name: get tenant services uuid
  shell: source /root/keystonerc_admin; keystone tenant-get services | awk '/id/ { print $4 }'
  register: tenant_services_uuid
  when: use_neutron
  tags: neutron

- name: deploy Havana specific Neutron config files
  template: src=havana/{{ item }}.j2
            dest=/etc/neutron/{{ item }}
            mode=0640 owner=root group=neutron
  with_items:
    - agent_watch.ini
    - api-paste.ini
  when: use_neutron and openstack_release == 'havana'
  tags: neutron

- name: set custom Neutron policy
  copy: src=files/neutron/policy.json
        dest=/etc/neutron/policy.json
        mode=0640 owner=root group=neutron
  when: use_neutron_custom_policy and (openstack_release == 'icehouse' or openstack_release == 'havana')
  tags: neutron

- name: deploy the neutron.conf file
  template: src={{ openstack_release }}/neutron.conf.j2
            dest=/etc/neutron/neutron.conf
            mode=0640 owner=root group=neutron
  when: use_neutron and (openstack_release == 'icehouse' or openstack_release == 'havana')
  tags: neutron

- name: deploy the metadata_agent.ini file
  template: src={{ openstack_release }}/metadata_agent.ini.j2
            dest=/etc/neutron/metadata_agent.ini
            mode=0640 owner=root group=neutron
  when: use_neutron and (openstack_release == 'icehouse' or openstack_release == 'havana')
  tags: neutron

- name: deploy the dhcp_agent.ini file
  template: src={{ openstack_release }}/dhcp_agent.ini.j2
            dest=/etc/neutron/dhcp_agent.ini
            mode=0640 owner=root group=neutron
  when: use_neutron and (openstack_release == 'icehouse' or openstack_release == 'havana')
  tags: neutron

- name: deploy the lbaas_agent.ini file
  template: src={{ openstack_release }}/lbaas_agent.ini.j2
            dest=/etc/neutron/lbaas_agent.ini
            mode=0640 owner=root group=neutron
  when: use_lbaas and (openstack_release == 'icehouse' or openstack_release == 'havana')
  tags: neutron

- name: deploy the l3_agent.ini file
  template: src={{ openstack_release }}/l3_agent.ini.j2
            dest=/etc/neutron/l3_agent.ini
            mode=0640 owner=root group=neutron
  when: use_neutron and (openstack_release == 'icehouse' or openstack_release == 'havana')
  tags: neutron

- name: deploy the ml2_conf.ini file
  template: src={{ openstack_release }}/ml2_conf.ini.j2
            dest=/etc/neutron/plugins/ml2/ml2_conf.ini
            mode=0640 owner=root group=neutron
  when: use_neutron_ml2 and (openstack_release == 'icehouse' or openstack_release == 'havana')
  tags: neutron

- name: deploy the ovs_neutron_plugin.ini file
  template: src={{ openstack_release }}/ovs_neutron_plugin.ini.j2
            dest=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini
            mode=0640 owner=root group=neutron
  when: use_neutron_ovs and (openstack_release == 'icehouse' or openstack_release == 'havana')
  tags: neutron

- name: deploy the cisco_plugins.ini file
  template: src={{ openstack_release }}/cisco_plugins.ini.j2
            dest=/etc/neutron/plugins/cisco/cisco_plugins.ini
            mode=0640 owner=root group=neutron
  when: use_neutron_cisco and (openstack_release == 'icehouse' or openstack_release == 'havana')
  tags: neutron

- name: link plugin.ini to the ml2 plugin config file
  file: src=/etc/neutron/plugins/ml2/ml2_conf.ini dest=/etc/neutron/plugin.ini state=link
  when: use_neutron_ml2
  tags: neutron

- name: link plugin.ini to the ovs plugin config file
  file: src=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini dest=/etc/neutron/plugin.ini state=link
  when: (use_neutron_ovs and not use_neutron_ml2)
  tags: neutron

- name: get services id
  shell: "keystone tenant-list --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} | grep services | gawk -F' ' '{print$2}'"
  register: services
  run_once: true

- name: Update neutron config file for Juno
  command: openstack-config --verbose --set /etc/neutron/neutron.conf {{ item }}
  with_items:
    - "DEFAULT verbose true"
    - "DEFAULT bind_host {{ neutron_bind_host }}"
    - "DEFAULT auth_strategy {{ neutron_auth_strategy }}"
    - "keystone_authtoken admin_tenant_name services"
    - "keystone_authtoken admin_user neutron"
    - "keystone_authtoken admin_password {{ neutron_pass }}"
    - "keystone_authtoken auth_uri {{ keystone_public_protocol | default('http') }}://{{ keystone_public_vip }}:{{ keystone_public_port | default(5000) }}/"
    - "keystone_authtoken identity_uri {{ keystone_auth_protocol | default('http') }}://{{ keystone_admin_vip }}:{{ keystone_auth_port | default(35357) }}/"
    - "database connection mysql://neutron:{{ neutron_db_pass }}@{{ lb_db_vip }}/neutron"
    - "database max_retries -1"
    - "DEFAULT rabbit_hosts {{ rabbit_hosts }}"
    - "DEFAULT rabbit_ha_queues true"
    - "DEFAULT rabbit_userid guest"
    - "DEFAULT rabbit_password guest"
    - "DEFAULT notification_driver {{ neutron_notification_driver }}"
    - "DEFAULT nova_url http://{{ nova_private_vip | default('127.0.0.1') }}:{{ nova_osapi_compute_listen_port | default(8774) }}/v2"
    - "DEFAULT notify_nova_on_port_status_changes {{ neutron_notify_nova_on_port_status_changes }}"
    - "DEFAULT notify_nova_on_port_data_changes {{ neutron_notify_nova_on_port_data_changes }}"
    - "DEFAULT nova_admin_auth_url {{ keystone_auth_protocol | default('http') }}://{{ keystone_admin_vip }}:{{ keystone_auth_port | default(35357) }}/v2.0"
    - "DEFAULT nova_region_name {{ nova_region_name | default('regionOne') }}"
    - "DEFAULT nova_admin_username compute"
    - "DEFAULT nova_admin_tenant_id {{ services.stdout }}"
    - "DEFAULT nova_admin_password {{ nova_pass }}"
    - "DEFAULT core_plugin {{ neutron_core_plugin }}"
    - "DEFAULT service_plugins {{ neutron_service_plugins | join(',') }}"
    - "DEFAULT router_scheduler_driver {{ neutron_router_scheduler_driver }}"
    - "DEFAULT l3_ha True"
    - "DEFAULT max_l3_agents_per_router 0"
    - "DEFAULT min_l3_agents_per_router 2"
    - "DEFAULT dhcp_agents_per_network {{ neutron_dhcp_agents_per_network }}"
  register: cmd
  changed_when: "'changed' in cmd.stderr"
  when: openstack_release == 'juno'
  tags: neutron

- name: Update ml2_conf config file for Juno
  command: openstack-config --verbose --set /etc/neutron/plugins/ml2/ml2_conf.ini {{ item }}
  with_items:
    - "DEFAULT verbose true"
    - "ml2 type_drivers {{ neutron_ml2_type_drivers }}"
    - "ml2 tenant_network_types {{ neutron_ml2_tenant_network_types }}"
    - "ml2 mechanism_drivers openvswitch"
    - "ml2_type_flat flat_networks \"*\""
    - "ml2_type_vxlan vni_ranges {{ neutron_vxlan_vni_ranges }}"
    - "ml2_type_vxlan vxlan_group {{ neutron_vxlan_group }}"
    - "securitygroup enable_security_group {{ neutron_enable_security_group }}"
    - "ml2_type_vlan network_vlan_ranges {{ neutron_network_vlan_ranges }}"
  register: cmd
  changed_when: "'changed' in cmd.stderr"
  when: openstack_release == 'juno'
  tags: neutron

- name: Update ovs_neutron_plugin config file for Juno
  command: openstack-config --verbose --set /etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini {{ item }}
  with_items:
    - "DEFAULT verbose true"
    - "agent tunnel_types {{ neutron_agent_tunnel_types }}"
    - "agent vxlan_udp_port {{ neutron_vxlan_udp_port }}"
    - "agent veth_mtu 9000"
    - "ovs local_ip {{ tunnel_ipaddr }}"
    - "ovs enable_tunneling True"
    - "ovs integration_bridge br-int"
    - "ovs tunnel_bridge br-tun"
    - "ovs bridge_mappings {{ neutron_ovs_bridge_mappings }}"
    - "ovs network_vlan_ranges {{ neutron_network_vlan_ranges }}"
    - "securitygroup firewall_driver {{ neutron_ovs_firewall_driver }}"
    - "agent arp_responder false"
    - "agent l2_population false"
  register: cmd
  changed_when: "'changed' in cmd.stderr"
  when: openstack_release == 'juno'
  tags: neutron

- name: Update metadata_agent config file for Juno
  command: openstack-config --verbose --set /etc/neutron/metadata_agent.ini {{ item }}
  with_items:
    - "DEFAULT verbose true"
    - "DEFAULT auth_strategy keystone"
    - "DEFAULT auth_url {{ keystone_private_protocol | default('http') }}://{{ keystone_private_vip | default('localhost') }}:{{ keystone_private_port | default(5000) }}/v2.0"
    - "DEFAULT auth_host {{ keystone_admin_vip | default('127.0.0.1') }}"
    - "DEFAULT auth_region {{ nova_region_name | default('regionOne') }}"
    - "DEFAULT admin_tenant_name services"
    - "DEFAULT admin_user neutron"
    - "DEFAULT admin_password {{ neutron_pass }}"
    - "DEFAULT nova_metadata_ip {{ nova_private_vip | default('127.0.0.1') }}"
    - "DEFAULT nova_metadata_port {{ nova_metadata_port | default(8775) }}"
    - "DEFAULT metadata_proxy_shared_secret {{ neutron_metadata_proxy_shared_secret }}"
    - "DEFAULT metadata_workers {{ neutron_metadata_workers }}"
    - "DEFAULT metadata_backlog {{ neutron_metadata_backlog }}"
  register: cmd
  changed_when: "'changed' in cmd.stderr"
  when: openstack_release == 'juno'
  tags: neutron

- name: Update dhcp_agent config file for Juno
  command: openstack-config --verbose --set /etc/neutron/dhcp_agent.ini {{ item }}
  with_items:
    - "DEFAULT verbose true"
    - "DEFAULT interface_driver neutron.agent.linux.interface.OVSInterfaceDriver"
    - "DEFAULT dhcp_delete_namespaces {{ neutron_dhcp_delete_namespaces }}"
  register: cmd
  changed_when: "'changed' in cmd.stderr"
  when: openstack_release == 'juno'
  tags: neutron

- name: Update l3_agent config file for Juno
  command: openstack-config --verbose --set /etc/neutron/l3_agent.ini {{ item }}
  with_items:
    - "DEFAULT verbose true"
    - "DEFAULT interface_driver neutron.agent.linux.interface.OVSInterfaceDriver"
    - "DEFAULT handle_internal_only_routers {{ neutron_l3_handle_internal_only_routers }}"
    - "DEFAULT send_arp_for_ha {{ neutron_l3_send_arp_for_ha }}"
    - "DEFAULT router_delete_namespaces {{ neutron_l3_router_delete_namespaces }}"
    - "DEFAULT metadata_ip {{ nova_private_vip | default('127.0.0.1') }}"
    - "DEFAULT external_network_bridge {{ neutron_external_network_bridge }}"
  register: cmd
  changed_when: "'changed' in cmd.stderr"
  when: openstack_release == 'juno'
  tags: neutron


- name: Update fwaas driver  file for Juno
  command: openstack-config --verbose --set /etc/neutron/fwaas_driver.ini {{ item }}
  with_items:
    - "DEFAULT verbose true"
    - "fwaas driver neutron.services.firewall.drivers.linux.iptables_fwaas.IptablesFwaasDriver"
    - "fwaas enabled True"
  register: cmd
  changed_when: "'changed' in cmd.stderr"
  when: openstack_release == 'juno'
  tags: neutron


- name: Update lbaas config file for Juno
  command: openstack-config --verbose --set /etc/neutron/lbaas_agent.ini {{ item }}
  with_items:
    - "DEFAULT verbose true"
    - "DEFAULT interface_driver neutron.agent.linux.interface.OVSInterfaceDriver"
    - "DEFAULT device_driver neutron.services.loadbalancer.drivers.haproxy.namespace_driver.HaproxyNSDriver"
  register: cmd
  changed_when: "'changed' in cmd.stderr"
  when: openstack_release == 'juno'
  tags: neutron

- name: create integration bridge
  openvswitch_bridge: bridge=br-int state=present
  when: use_neutron
  tags: neutron

- name: create tunneling bridge
  openvswitch_bridge: bridge=br-tun state=present
  when: neutron_ovs_tunnel_type is defined
  tags: neutron

- name: create external network bridge
  openvswitch_bridge: bridge={{ neutron_external_network_bridge | default('br-ex') }} state=present
  when: use_neutron_l3
  tags: neutron

- name: create ovs bridges
  openvswitch_bridge: bridge={{ item.bridge }} state=present
  with_items: neutron_ovs_bridges
  when: neutron_ovs_bridges is defined
  tags: neutron

- name: configure ovs ports
  openvswitch_port: bridge={{ item.bridge }} port={{ item.port }} state=present
  with_items: neutron_ovs_bridges
  when: neutron_ovs_bridges is defined
  tags: neutron

- name: bring up bridge interfaces
  command: ifup {{ item }}
  with_items:
    - "{{ neutron_external_network_bridge }}"
  when: neutron_ovs_bridges is defined
  tags: neutron

- name: bring up bridge with ifconfig
  command: ip link set {{ item }} up
  with_items:
    - "{{ neutron_ovs_tunnel_bridge }}"
    - "{{ neutron_ovs_integration_bridge }}"
  when: neutron_ovs_bridges is defined
  tags: neutron

- name: create a directory for the cisco nexus ssh keys
  file: dest=/var/lib/neutron/.ssh mode=0700 owner=neutron group=neutron state=directory
  when: use_neutron_cisco
  tags: neutron

- name: make cisco nexus switch ssh keys known
  copy: src=special/cisco_nexus.keys dest=/var/lib/neutron/.ssh/known_hosts mode=0644 owner=neutron group=neutron
  when: use_neutron_cisco
  tags: neutron

- name: check for tables
  command: mysql -e "select count(*) from information_schema.tables where table_schema='neutron'" -sN
  run_once: true
  register: mysql_result
  tags: neutron

- name: stamp neutron database
  command: /usr/bin/neutron-db-manage --config-file /usr/share/neutron/neutron-dist.conf --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugin.ini upgrade head
  when: mysql_result.stdout|int <= 1
  run_once: true
  tags: neutron

- name: disable neutron services
  service: name={{ item }} enabled=no
  with_items:
    - neutron-server
    - neutron-dhcp-agent
    - neutron-metadata-agent
    - neutron-l3-agent
    - neutron-lbaas-agent
    - neutron-openvswitch-agent
  when: use_neutron and use_ha_controller
  tags: neutron

- name: enable neutron services
  service: name={{ item }} enabled=yes state=started
  with_items:
    - neutron-server
    - neutron-dhcp-agent
    - neutron-metadata-agent
    - neutron-l3-agent
    - neutron-lbaas-agent
    - neutron-openvswitch-agent
  when: use_neutron and not use_ha_controller
  run_once: true
  tags: neutron

- name: disable neutron services
  service: name={{ item }} enabled=no state=stopped
  with_items:
    - neutron-server
    - neutron-dhcp-agent
    - neutron-metadata-agent
    - neutron-l3-agent
    - neutron-lbaas-agent
    - neutron-openvswitch-agent
  when: use_neutron and not use_ha_controller
  tags: neutron

- include: juno-cluster-resources.yml
  when: openstack_release == 'juno'
  tags: neutron

- include: rhel7-icehouse-cluster-resources.yml
  when: openstack_release == 'icehouse' and ansible_distribution_major_version|int == 7
  tags: neutron

- include: rhel6-icehouse-cluster-resources.yml
  when: openstack_release == 'icehouse' and ansible_distribution_major_version|int == 6
  tags: neutron

- include: rhel6-havana-cluster-resources.yml
  when: openstack_release == 'havana' and ansible_distribution_major_version|int == 6
  tags: neutron

- include: cluster-constraints.yml
  tags: neutron
  when: openstack_release == 'havana' or openstack_release == 'icehouse'

- include: juno-cluster-constraints.yml
  tags: neutron
  when: openstack_release == 'juno'




