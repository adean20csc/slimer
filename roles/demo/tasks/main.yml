---
# setups up test network for demo
- name: deploy the keystonerc_demo file
  template: src=keystonerc_demo.j2
            dest=/root/keystonerc_demo
            mode=0750 owner=root group=root
  tags: demo

- name: create demo project
  keystone_user:
    login_password: "{{admin_pass}}"
    endpoint: "{{keystone_adminurl}}"
    login_user: "{{admin_user}}"
    login_tenant_name: "{{admin_tenant}}"
    tenant: "{{demo_tenant}}"
    tenant_description: "demo tenant"
  run_once: true
  tags: demo

- name: add admin to demo tenant
  keystone_user:
    login_password: "{{admin_pass}}"
    endpoint: "{{keystone_adminurl}}"
    login_user: "{{admin_user}}"
    login_tenant_name: "{{admin_tenant}}"
    tenant: "{{demo_tenant}}"
    user: "{{demo_user}}"
    role: "_member_"
  run_once: true
  tags: demo

- name: create demo user
  keystone_user:
    login_password: "{{admin_pass}}"
    endpoint: "{{keystone_adminurl}}"
    login_user: "{{admin_user}}"
    login_tenant_name: "{{admin_tenant}}"
    user: "{{demo_user}}"
    password: "{{demo_pass}}"
    tenant: "{{demo_tenant}}"
    role: "_member_"
  run_once: true
  tags: demo

- name: check for external network
  command: neutron {{os_admin_auth}} net-list
  register: cmd
  run_once: true
  tags: demo

- name: create External Network.
  command: >
    neutron {{os_admin_auth}}
    net-create {{ext_net_name}}
  run_once: true
  when: "{{ext_net_name}}" not in netcheck.stdout
  tags: demo

- name: create external Subnet.
  command: >
    neutron
    {{os_admin_auth}}
    subnet-create {{ext_net_name}}
    --gateway {{ext_gateway}}
    --allocation-pool start={{ext_allocation.start}},end={{ext_allocation.end}}
    --disable-dhcp
    {{ext_network}}
  when: "{{ext_network}}" not in netcheck.stdout
  run_once: true
  tags: demo

- name: get external network ID
  shell: $(neutron net-list | grep {{ext_net_name}} | gawk -F' ' '{print $2}')"
  register: external_id
  run_once: true
  tags: demo

- name: create internal Network.
  command: >
    neutron
    {{os_demo_auth}}
    net-create {{int_net_name}}
  when: "{{int_net_name}}" not in netcheck.stdout
  run_once: true
  tags: demo

- name: create internal Subnet.
  command: >
    neutron
    {{os_demo_auth}}
    subnet-create
    {{int_net_name}} {{int_network}}
  run_once: true
  when: "{{int_network}}" not in netcheck.stdout
  tags: demo

- name: get external network ID
  shell: $(neutron net-list | grep {{int_net_name}} | gawk -F' ' '{print $2}')
  register: internal_id
  run_once: true
  tags: demo

- name: create router
  command: >
    neutron
    {{os_demo_auth}}
    router-create {{router_name}}
  run_once: true
  tags: demo

- name: set router-gateway
  command: neutron {{os_demo_auth}} router-gateway-set {{router_name}} {{external_id.stdout}}
  run_once: true
  tags: demo

- name: set internal router inteface in demo
  command: neutron {{os_demo_auth}} router-interface-add {{router_name}} {{internal_id.stdout}}
  run_once: true
  tags: demo
