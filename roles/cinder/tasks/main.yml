---

# Setting up cinder using nfs until a different driver is supplied

- name: install cinder components
  yum: name={{ item }} state=present
  with_items:
  - openstack-cinder
  - openstack-utils
  - python-memcached
  - python-keystonemiddleware
  - python-openstackclient
  - nfs-utils
  tags: cinder

- name: configure base cinder via openstack-config utility
  command: openstack-config --set --verbose {{item}}
  with_items:
    - "/etc/cinder/cinder.conf database connection mysql://cinder:{{ cinder_db_pass }}@{{ lb_db_vip}}/cinder"
    - "/etc/cinder/cinder.conf database max_retries -1"
    - "/etc/cinder/cinder.conf DEFAULT auth_strategy keystone"
    - "/etc/cinder/cinder.conf keystone_authtoken identity_uri {{ keystone_auth_protocol | default('http') }}://{{ keystone_admin_vip }}:{{ keystone_auth_port | default(35357) }}/"
    - "/etc/cinder/cinder.conf keystone_authtoken auth_uri{{ keystone_public_protocol | default('http') }}://{{ keystone_public_vip }}:{{ keystone_public_port | default(5000) }}/"
    - "/etc/cinder/cinder.conf keystone_authtoken admin_tenant_name services"
    - "/etc/cinder/cinder.conf keystone_authtoken admin_user cinder"
    - "/etc/cinder/cinder.conf keystone_authtoken admin_password {{ cinder_pass }}"
    - "/etc/cinder/cinder.conf DEFAULT notification_driver messaging"
    - "/etc/cinder/cinder.conf DEFAULT control_exchange cinder"
    - "/etc/cinder/cinder.conf DEFAULT glance_host {{ glance_private_vip }}"
    - "/etc/cinder/cinder.conf DEFAULT memcache_servers {{ memcache_list }}"
    - "/etc/cinder/cinder.conf DEFAULT rabbit_hosts {{ rabbit_hosts }}"
    - "/etc/cinder/cinder.conf DEFAULT rabbit_ha_queues true"
  register: cmd
  changed_when: "'unchanged' not in cmd.stderr"
  tags: cinder

- name: configure cinder nfs driver via openstack-config utility
  command: openstack-config --set --verbose {{item}}
  with_items:
    - "/etc/cinder/cinder.conf DEFAULT host rhos6-cinder"
    - "/etc/cinder/cinder.conf DEFAULT osapi_volume_listen {{ cinder_osapi_volume_listen }}"
    - "/etc/cinder/cinder.conf DEFAULT osapi_volume_listen_port {{ cinder_osapi_volume_listen_port }}"
    - "/etc/cinder/cinder.conf DEFAULT nfs_shares_config /etc/cinder/nfs_exports"
    - "/etc/cinder/cinder.conf DEFAULT nfs_sparsed_volumes true"
    - "/etc/cinder/cinder.conf DEFAULT nfs_mount_options v3"
    - "/etc/cinder/cinder.conf DEFAULT volume_driver cinder.volume.drivers.nfs.NfsDriver"
  register: cmd
  when: use_cinder_nfs_volume_driver
  changed_when: "'unchanged' not in cmd.stderr"
  tags: cinder
  
- name: create nfs export directory
  file: state=directory path={{nfs_path}}/cinder owner=root group=cinder mode=0640
  tags: cinder
  
- name: create cinder nfs export file
  template: src=nfs_exports.j2 dest=/etc/cinder/nfs_exports owner=root group=cinder mode=0640
  tags: cinder

- name: run dbsync for cinder
  command: runuser cinder -s /bin/sh -c '/usr/bin/cinder-manage db sync'
  run_once: true
  tags: cinder

- name: enable nfs support services
  service: name={{ item }} enabled=yes state=started
  with_items:
    - rpcbind
    - nfslock
  when: use_cinder_nfs_volume_driver
  tags: cinder
  
- name: disable cinder services
  service: name={{ item }} enabled=no
  with_items:
    - openstack-cinder-api
    - openstack-cinder-scheduler
    - openstack-cinder-volume
  tags: cinder

- name: create pacemaker resources for cinder-api
  pcs_resource: command=create name=cinder-api type=systemd:openstack-cinder-api clone=yes
  args:
    operations:
      - action: monitor
        options:
          start-delay: 10s
  run_once: true
  when: ansible_distribution_major_version|int == 7
  tags: cinder
  
- name: create pacemaker resource for cinder-scheduler
  pcs_resource: command=create name=cinder-scheduler type=systemd:openstack-cinder-scheduler clone=yes
  args:
    operations:
      - action: monitor
        options:
          start-delay: 10s
  when: ansible_distribution_major_version|int == 7
  tags: cinder
  
- name: create pacemaker resource for cinder-volume
  pcs_resource: command=create name=cinder-volume type=systemd:openstack-cinder-volume 
  args:
    operations:
      - action: monitor
        options:
          start-delay: 10s
  when: ansible_distribution_major_version|int == 7
  tags: cinder

#TODO add constraints
# pcs constraint order start cinder-api-clone then cinder-scheduler-clone
# pcs constraint colocation add cinder-scheduler-clone with cinder-api-clone
# pcs constraint order start cinder-scheduler-clone then cinder-volume
# pcs constraint colocation add cinder-volume with cinder-scheduler-clone
# 
# if [ $PHD_VAR_deployment = collapsed ]; then
#     pcs constraint order start keystone-clone then cinder-api-clone

