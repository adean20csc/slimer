---
- name: install keystone components
  yum: pkg={{item}} state=present
  with_items:
    - openstack-keystone
    - openstack-utils
    - httpd
  tags: keystone

# following requires that crudini .5-1 be installed from epel or it will fail.

- name: set keystone configuration
  command: openstack-config --verbose {{ item }}
  with_items:
    - " --set /etc/keystone/keystone.conf DEFAULT admin_token {{keystone_admin_token}}"
    - " --set /etc/keystone/keystone.conf DEFAULT rabbit_hosts {{rabbit_hosts}}"
    - " --set /etc/keystone/keystone.conf DEFAULT rabbit_ha_queues true"
    - " --set /etc/keystone/keystone.conf DEFAULT admin_endpoint http://{{ keystone_vip }}:35357"
    - " --set /etc/keystone/keystone.conf DEFAULT public_endpoint http://{{ keystone_public_vip }}:{{keystone_public_port}}"
    - " --set /etc/keystone/keystone.conf DEFAULT database connection mysql://keystone:{{keystone_db_pass}}@{{lb_db_vip}}/keystone"
    - " --set /etc/keystone/keystone.conf database max_retries -1"
    - " --set /etc/keystone/keystone.conf DEFAULT public_bind_host {{internal_ipaddr}}"
    - " --set /etc/keystone/keystone.conf DEFAULT admin_bind_host {{internal_ipaddr}}"
  register: cmd
  changed_when: "'unchanged' not in cmd.stderr"
  tags: keystone

# create ssl cert if using sha key for token

- name: populate keystone database
  command: su keystone -s /bin/sh -c "keystone-manage -v -d db_sync"
  tags: keystone
  run_once: true

# Pacemaker operations

- name: create pacemaker resources for keystone
  pcs_resource: command=create name=keystone type=systemd:openstack-keystone clone=yes
  args:
   operations:
      - action: interleave
        options: true
         
  run_once: true
  when: ansible_distribution_major_version|int == 7
  tags: keystone

#- name: create pcs constraints for keystone
#  command: pcs constraint order start {{item}}
#  with_items:
#    - lb-haproxy-clone then keystone-clone
#    - galera-master then keystone-clone
#    - rabbitmq-clone then keystone-clone
#    - memcached-clone then keystone-clone
#  run_once: true
#  tags: keystone

# configure keystone user and roles.
- name: create admin tenant
  keystone_user: token={{ keystone_admin_token }} endpoint={{ keystone_adminurl }} tenant=admin
  run_once: true
  tags: keystone

- name: create the admin user
  keystone_user: token={{ keystone_admin_token }} endpoint={{ keystone_adminurl }} user=admin tenant=admin password={{ admin_pass }}
  run_once: true
  tags: keystone

- name: create and apply the admin role to the admin user in the admin tenant
  keystone_user: token={{ keystone_admin_token }} endpoint={{ keystone_adminurl }} role=admin user=admin tenant=admin
  run_once: true
  tags: keystone

- name: create the services tenant
  keystone_user: token={{ keystone_admin_token }} endpoint={{ keystone_adminurl }} tenant=services tenant_description="Services Tenant"
  run_once: true
  tags: keystone

- name: deploy the keystonerc_admin file
  template: src={{ openstack_release }}/keystonerc_admin.j2
            dest=/root/keystonerc_admin
            mode=0750 owner=root group=root
  tags: keystone

- name: create the glance user
  keystone_user: token={{ keystone_admin_token }} endpoint={{ keystone_adminurl }} user=glance tenant=services password={{ glance_pass }}
  run_once: true
  tags: keystone

- name: apply the admin role to the glance user
  keystone_user: token={{ keystone_admin_token }} endpoint={{ keystone_adminurl }} user=glance role=admin tenant=services
  run_once: true
  tags: keystone

- name: create the cinder user
  keystone_user: token={{ keystone_admin_token }} endpoint={{ keystone_adminurl }} user=cinder tenant=services password={{ cinder_pass }}
  run_once: true
  tags: keystone

- name: apply the admin role to the cinder user
  keystone_user: token={{ keystone_admin_token }} endpoint={{ keystone_adminurl }} user=cinder role=admin tenant=services
  run_once: true
  tags: keystone

- name: create the swift user
  keystone_user: token={{ keystone_admin_token }} endpoint={{ keystone_adminurl }} user=swift tenant=services password={{ swift_pass }}
  run_once: true
  tags: keystone

- name: apply the admin role to the swift user
  keystone_user: token={{ keystone_admin_token }} endpoint={{ keystone_adminurl }} user=swift role=admin tenant=services
  run_once: true
  tags: keystone

- name: create the neutron user
  keystone_user: token={{ keystone_admin_token }} endpoint={{ keystone_adminurl }} user=neutron tenant=services password={{ neutron_pass }}
  run_once: true
  tags: keystone

- name: apply the admin role to the neutron user
  keystone_user: token={{ keystone_admin_token }} endpoint={{ keystone_adminurl }} user=neutron role=admin tenant=services
  run_once: true
  tags: keystone

- name: create the compute user
  keystone_user: token={{ keystone_admin_token }} endpoint={{ keystone_adminurl }} user=compute tenant=services password={{ nova_pass }}
  run_once: true
  tags: keystone

- name: apply the admin role to the compute user
  keystone_user: token={{ keystone_admin_token }} endpoint={{ keystone_adminurl }} user=compute role=admin tenant=services
  run_once: true
  tags: keystone

- name: create the heat user
  keystone_user: token={{ keystone_admin_token }} endpoint={{ keystone_adminurl }} user=heat tenant=services password={{ heat_pass }}
  run_once: true
  tags: keystone

- name: apply the admin role to the heat user
  keystone_user: token={{ keystone_admin_token }} endpoint={{ keystone_adminurl }} user=heat role=admin tenant=services
  run_once: true
  tags: keystone

- name: create the ceilometer user
  keystone_user: token={{ keystone_admin_token }} endpoint={{ keystone_adminurl }} user=ceilometer tenant=services password={{ ceilometer_pass }}
  run_once: true
  tags: keystone

- name: apply the admin role to the ceilometer user
  keystone_user: token={{ keystone_admin_token }} endpoint={{ keystone_adminurl }} user=ceilometer role=admin tenant=services
  run_once: true
  tags: keystone

- name: apply the ResellerAdmin role to the ceilometer user
  keystone_user: token={{ keystone_admin_token }} endpoint={{ keystone_adminurl }} user=ceilometer role=ResellerAdmin tenant=services
  run_once: true
  tags: keystone

- name: create the keystone service
  shell: keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} service-get keystone || keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} service-create --name keystone --type identity --description "Keystone Identity Service"
  run_once: true
  tags: keystone

- name: create the glance service
  shell: keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} service-get glance || keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} service-create --name glance --type image --description "Glance Image Service"
  run_once: true
  tags: keystone

- name: create the cinder service
  shell: keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} service-get cinder || keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} service-create --name cinder --type volume --description "Cinder Volume Service"
  run_once: true
  tags: keystone

- name: create the swift service
  shell: keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} service-get swift || keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} service-create --name swift --type object-store --description "Swift Storage Service"
  run_once: true
  when: use_swift
  tags: keystone

- name: create the neutron service
  shell: keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} service-get neutron || keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} service-create --name neutron --type network --description "OpenStack Networking Service"
  run_once: true
  when: use_neutron
  tags: keystone

- name: create the compute service
  shell: keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} service-get compute || keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} service-create --name compute --type compute --description "OpenStack Compute Service"
  run_once: true
  tags: keystone

- name: create the heat service
  shell: keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} service-get heat || keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} service-create --name heat --type orchestration --description "OpenStack Orchestration Service"
  run_once: true
  when: use_heat
  tags: keystone

- name: create the heat-cfn service
  shell: keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} service-get heat-cfn || keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} service-create --name heat-cfn --type cloudformation --description "OpenStack CloudFormation Service"
  run_once: true
  when: use_heat
  tags: keystone

- name: create the ceilometer service
  shell: keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} service-get ceilometer || keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} service-create --name ceilometer --type metering --description "OpenStack Telemetry Service"
  run_once: true
  when: use_ceilometer
  tags: keystone

- name: create keystone endpoints
  shell: keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} endpoint-get identity || keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} endpoint-create --service keystone --publicurl "http://{{ keystone_public_vip }}:5000/v2.0" --adminurl "http://{{ keystone_admin_vip }}:35357/v2.0" --internalurl "http://{{ keystone_private_vip }}:5000/v2.0"
  run_once: true
  tags: keystone

- name: create glance endpoints
  shell: keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} endpoint-get image || keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} endpoint-create --service glance --publicurl "http://{{ glance_public_vip }}:9292" --adminurl "http://{{ glance_admin_vip }}:9292" --internalurl "http://{{ glance_private_vip }}:9292"
  run_once: true
  tags: keystone

- name: create cinder endpoints
  shell: keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} endpoint-get volume || keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} endpoint-create --service cinder --publicurl "http://{{ cinder_public_vip }}:8776/v1/\$(tenant_id)s" --adminurl "http://{{ cinder_admin_vip }}:8776/v1/\$(tenant_id)s" --internalurl "http://{{ cinder_private_vip }}:8776/v1/\$(tenant_id)s"
  run_once: true
  tags: keystone

- name: create neutron endpoints
  shell: keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} endpoint-get network || keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} endpoint-create --service neutron --publicurl "http://{{ neutron_public_vip }}:9696" --adminurl "http://{{ neutron_admin_vip }}:9696" --internalurl "http://{{ neutron_private_vip }}:9696"
  run_once: true
  when: use_neutron
  tags: keystone

- name: create compute endpoints
  shell: keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} endpoint-get compute || keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} endpoint-create --service compute --publicurl "http://{{ nova_public_vip }}:8774/v2/\$(tenant_id)s" --adminurl "http://{{ nova_admin_vip }}:8774/v2/\$(tenant_id)s" --internalurl "http://{{ nova_private_vip }}:8774/v2/\$(tenant_id)s"
  run_once: true
  tags: keystone

- name: create heat endpoints
  shell: keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} endpoint-get orchestration || keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} endpoint-create --service heat --publicurl "http://{{ heat_public_vip }}:8004/v1/%(tenant_id)s" --adminurl "http://{{ heat_admin_vip }}:8004/v1/%(tenant_id)s" --internalurl "http://{{ heat_private_vip }}:8004/v1/%(tenant_id)s"
  run_once: true
  when: use_heat
  tags: keystone

- name: create heat-cfn endpoints
  shell: keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} endpoint-get cloudformation || keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} endpoint-create --service heat-cfn --publicurl "http://{{ heat_public_vip }}:8000/v1" --adminurl "http://{{ heat_admin_vip }}:8000/v1" --internalurl "http://{{ heat_private_vip }}:8000/v1"
  run_once: true
  when: use_heat
  tags: keystone

- name: create ceilometer endpoints
  shell: keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} endpoint-get metering || keystone --os-token {{ keystone_admin_token }} --os-endpoint {{ keystone_adminurl }} endpoint-create --service ceilometer --publicurl "http://{{ ceilometer_public_vip }}:8777" --adminurl "http://{{ ceilometer_admin_vip }}:8777" --internalurl "http://{{ ceilometer_private_vip }}:8777"
  run_once: true
  when: use_ceilometer
  tags: keystone

